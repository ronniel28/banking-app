{"version":3,"sources":["components/SignOutButton.jsx","components/Sidebar.jsx","components/AlertNotif.jsx","components/Heading.jsx","components/AccountCard.jsx","components/BackAccountOptionTwo.jsx","components/SuccessNotif.jsx","components/DepositForm.jsx","components/DepositModal.jsx","components/Input.jsx","components/ExpensesButton.jsx","components/ExpenceCard.jsx","components/ExpensesTable.jsx","components/ExpensesModal.jsx","components/BankAccountOption.jsx","components/MoneyTransferForm.jsx","components/TransferMoneyModal.jsx","components/WithdrawalForm.jsx","components/WithdrawModal.jsx","components/ResponsiveCard.jsx","components/Section.jsx","components/Dashboard.jsx","components/AddFriend.jsx","components/ContactCard.jsx","components/FriendsTable.jsx","components/Friends.jsx","components/AddAccount.jsx","components/MyAccountCard.jsx","components/MyAccountsTable.jsx","components/SettingsPage.jsx","components/DepositTransactionCard.jsx","components/TransferTransactionCard.jsx","components/WithdrawTransactionCard.jsx","components/TransactionCard.jsx","components/TransactionHistory.jsx","components/MainContent.jsx","components/NewLogIn.jsx","components/App.jsx","index.js"],"names":["SignOutButton","props","onClick","logOut","setMessege","color","buttonType","size","rounded","block","iconOnly","ripple","className","Sidebar","href","src","alt","border","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","type","placeholder","xmlns","AlertNotif","messege","Heading","name","AccountCard","accountDetail","initialAmount","accountName","accountNumber","width","BankAccountOptionTwo","addSelectedAccountId","SuccessNotif","DepositForm","accountToMap","myAccounts","useState","transactionType","accountType","toAccountId","toAccount","amount","note","depositInput","setDepositInput","notif","setNotif","handleChange","event","today","Date","target","value","prevInput","parseInt","now","id","prevValue","onChange","map","account","index","accounttype","findSelectedAccount","required","toDeposit","preventDefault","addToTransaction","DepositModal","showModal","setShowModal","e","active","toggler","addToTimeStamps","ExpensesInput","console","log","outline","ExpensesButton","toAdd","ExpenceCard","itemName","itemPrice","toDelete","ExpensesTable","passedItems","items","item","ExpensesModal","React","expenseItem","setExpenseItem","setItems","handleInput","passedEvent","prevItems","filter","BankAccountOption","addFromInitialAmount","MoneyTransferForm","contactsToMap","contacts","myAccountsToMap","setAccountToMap","fromInitialAmount","fromAccount","fromAccountId","transferInfo","setTransferInfo","prevInfo","useEffect","myAccount","toWithdraw","TransferMoneyModal","WithdrawalForm","withdrawInput","setWithdrawInput","WithdrawModal","ResponsiveCard","toTransfer","Section","Dashboard","transactions","AddFriend","contactInfo","setContactInfo","iconName","addContact","ContactCard","toDeleteContact","FriendsTable","contactMap","contact","Friends","AddAccount","accountInfo","setAccountInfo","addMyAccount","MyAccountCard","deleteMyAccount","MyAccountsTable","accountMap","SettingsPage","DepositTransactionCard","hours","getHours","minutes","getMinutes","displayminutes","seconds","getSeconds","displayseconds","dd","String","getDate","padStart","transationTime","dateToday","getMonth","getFullYear","TransferTransactionCard","WithdrawTransactionCard","TransactionCard","transaction","TransactionHistory","MainContent","setTransactions","NewlogIn","username","password","credential","setCredential","style","backgroundImage","for","login","rel","title","logInCredential","myAccountDetail","key","App","logInMessege","setLogInMessege","isLoggedIn","setIsLoggedIn","setContacts","setMyAccounts","transferInput","transferFromAccountId","transferAmount","transferToAccountId","transferAccountType","accountId","prevContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b174316.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\n\r\nexport default function SignOutButton(props) {\r\n\r\n    function handleLogOut(){\r\n        props.logOut()\r\n        props.setMessege(\"You've been logged out\")\r\n    }\r\n    return (\r\n        <Button\r\n            onClick={handleLogOut}\r\n            color=\"red\"\r\n            buttonType=\"filled\"\r\n            size=\"regular\"\r\n            rounded={false}\r\n            block={false}\r\n            iconOnly={false}\r\n            ripple=\"light\"\r\n        >\r\n            <i className=\"fas fa-sign-out-alt\"></i>Log Out\r\n        </Button>\r\n    )\r\n}","import React from 'react';\r\nimport SignOutButton from './SignOutButton';\r\n\r\nfunction Sidebar(props){\r\n    return(\r\n       \r\n             <div className=\"fixed flex flex-col w-64 h-screen px-4 py-8 bg-blue-700 border-r dark:bg-gray-800 dark:border-gray-600\">\r\n        \r\n        {/* logo start */}\r\n        <a href=\"https://im.ge/i/CQtjf\"><img src=\"https://i.im.ge/2021/08/21/CQtjf.png\" alt=\"CQtjf.png\" border=\"0\"/></a>\r\n\r\n        {/* logo end */}\r\n        <div className=\"relative mt-6\">\r\n            <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                <svg className=\"w-5 h-5 text-gray-400\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                    <path d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n                </svg>\r\n            </span>\r\n\r\n            <input type=\"text\" className=\"w-full py-3 pl-10 pr-4 text-gray-700 bg-white border border-gray-300 rounded-md dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 focus:border-blue-500 dark:focus:border-blue-500 focus:outline-none focus:ring\" placeholder=\"Search\"/>\r\n        </div>\r\n        \r\n        <div className=\"flex flex-col justify-between flex-1 mt-6\">\r\n            <nav>\r\n                <a className=\"active:bg-white flex items-center px-4 py-2 mt-5 text-white transition-colors duration-200 transform rounded-md dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 dark:hover:text-gray-200 hover:text-gray-700\" href=\"#dashboard\">\r\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M19 11H5M19 11C20.1046 11 21 11.8954 21 13V19C21 20.1046 20.1046 21 19 21H5C3.89543 21 3 20.1046 3 19V13C3 11.8954 3.89543 11 5 11M19 11V9C19 7.89543 18.1046 7 17 7M5 11V9C5 7.89543 5.89543 7 7 7M7 7V5C7 3.89543 7.89543 3 9 3H15C16.1046 3 17 3.89543 17 5V7M7 7H17\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n\r\n                    <span className=\"mx-4 font-medium\">Dashboard</span>\r\n                </a>\r\n\r\n                <a className=\"flex items-center px-4 py-2 mt-5 text-white transition-colors duration-200 transform rounded-md dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 dark:hover:text-gray-200 hover:text-gray-700\" href=\"#friends\">\r\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    <path d=\"M12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n\r\n                    <span className=\"mx-4 font-medium\">Contacts</span>\r\n                </a>\r\n\r\n                <a className=\"flex items-center px-4 py-2 mt-5 text-white transition-colors duration-200 transform rounded-md dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 dark:hover:text-gray-200 hover:text-gray-700\" href=\"#transaction-history\">\r\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15 5V7M15 11V13M15 17V19M5 5C3.89543 5 3 5.89543 3 7V10C4.10457 10 5 10.8954 5 12C5 13.1046 4.10457 14 3 14V17C3 18.1046 3.89543 19 5 19H19C20.1046 19 21 18.1046 21 17V14C19.8954 14 19 13.1046 19 12C19 10.8954 19.8954 10 21 10V7C21 5.89543 20.1046 5 19 5H5Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n\r\n                    <span className=\"mx-4 font-medium\">Transaction History</span>\r\n                </a>\r\n\r\n                <a className=\"flex items-center px-4 py-2 mt-5 text-white transition-colors duration-200 transform rounded-md dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 dark:hover:text-gray-200 hover:text-gray-700\" href=\"#settings\">\r\n                    <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M10.3246 4.31731C10.751 2.5609 13.249 2.5609 13.6754 4.31731C13.9508 5.45193 15.2507 5.99038 16.2478 5.38285C17.7913 4.44239 19.5576 6.2087 18.6172 7.75218C18.0096 8.74925 18.5481 10.0492 19.6827 10.3246C21.4391 10.751 21.4391 13.249 19.6827 13.6754C18.5481 13.9508 18.0096 15.2507 18.6172 16.2478C19.5576 17.7913 17.7913 19.5576 16.2478 18.6172C15.2507 18.0096 13.9508 18.5481 13.6754 19.6827C13.249 21.4391 10.751 21.4391 10.3246 19.6827C10.0492 18.5481 8.74926 18.0096 7.75219 18.6172C6.2087 19.5576 4.44239 17.7913 5.38285 16.2478C5.99038 15.2507 5.45193 13.9508 4.31731 13.6754C2.5609 13.249 2.5609 10.751 4.31731 10.3246C5.45193 10.0492 5.99037 8.74926 5.38285 7.75218C4.44239 6.2087 6.2087 4.44239 7.75219 5.38285C8.74926 5.99037 10.0492 5.45193 10.3246 4.31731Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    <path d=\"M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n\r\n                    <span className=\"mx-4 font-medium\">Settings</span>\r\n                </a>\r\n\r\n                <hr className=\"my-6 dark:border-gray-600\" />\r\n               \r\n               \r\n            </nav>\r\n\r\n            <div className=\"flex items-center px-4 -mx-2\">\r\n                <img className=\"object-cover mx-2 rounded-full h-9 w-9\" src=\"https://images.unsplash.com/photo-1531427186611-ecfd6d936c79?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\" alt=\"avatar\"/>\r\n                <h4 className=\"mx-2 font-medium text-gray-800 dark:text-gray-200 hover:underline\">John Doe</h4>\r\n            </div>\r\n            <div>\r\n                <SignOutButton \r\n                setMessege ={props.setMessege}\r\n                logOut={props.logOut} />\r\n                </div>\r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport Alert from \"@material-tailwind/react/Alert\";\r\n\r\nexport default function AlertNotif(props) {\r\n    return (\r\n        <Alert color=\"red\">{props.messege}</Alert>\r\n    );\r\n}","import React from \"react\";\r\nimport H4 from \"@material-tailwind/react/Heading4\";\r\n\r\nexport default function Heading(props) {\r\n    return (\r\n        <H4 color=\"white\">{props.name}</H4>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\nfunction AccountCard(props){\r\n    return(\r\n    \r\n        <div className=\"w-72 p-3 bg-gradient-to-r from-gray-600 to-black rounded-lg\">\r\n        <h1 className=\"text-3xl font-semibold text-gray-100 pb-4\">{props.accountDetail.initialAmount}</h1> <span className=\"text-xs text-gray-200 shadow-2xl\">{props.accountDetail.accountName}</span>\r\n            <div className=\"flex justify-between items-center pt-4\">\r\n                <div className=\"flex flex-col\"> <span className=\"text-xs text-gray-300 font-bold\">{props.accountDetail.accountNumber}</span> <span className=\"text-xs text-gray-300 font-bold\">09/10</span> </div> <img src=\"https://img.icons8.com/offices/80/000000/sim-card-chip.png\" width=\"48\" />\r\n            </div>\r\n        </div>\r\n    \r\n    \r\n    )\r\n}\r\n\r\nexport default AccountCard;","import React from 'react';\r\n\r\nfunction BankAccountOptionTwo(props){\r\n\r\n    function handleClick(){\r\n        props.addSelectedAccountId(props);\r\n        \r\n    }\r\nreturn(<option onClick={handleClick}>{props.accountName} {props.accountNumber}</option>)\r\n}\r\n\r\nexport default BankAccountOptionTwo;","import React from \"react\";\r\nimport Alert from \"@material-tailwind/react/Alert\";\r\n\r\nexport default function SuccessNotif(props) {\r\n    return (\r\n        <Alert color=\"lightBlue\">{props.messege}</Alert>\r\n    );\r\n}","\r\nimport React,{useState, useEffect} from 'react';\r\nimport BankAccountOptionTwo from './BackAccountOptionTwo';\r\nimport SuccessNotif from './SuccessNotif';\r\n\r\n\r\nexport default function DepositForm(props){\r\n    \r\n    const accountToMap = props.myAccounts;\r\n    const [depositInput, setDepositInput]= useState({\r\n        transactionType:\"deposit\",\r\n        initialAmount:\"\",\r\n        accountType:\"\",\r\n        toAccountId:\"\",\r\n        toAccount:\"\",\r\n        amount:\"\",\r\n        note:\"\"\r\n    })\r\n\r\n    const[notif, setNotif]=useState(\"\");\r\n\r\n    function handleChange(event){\r\n        const today= new Date();\r\n        const {name, value}= event.target;\r\n        if(name===\"amount\"){\r\n            setDepositInput(prevInput=>{\r\n                return{...prevInput,\r\n                [name]:parseInt(value)}\r\n            })\r\n        }else{\r\n            setDepositInput(prevInput=>{\r\n                return{...prevInput,\r\n                [name]:value}\r\n               \r\n            })\r\n        }\r\n        setDepositInput(prevInput=>{\r\n            return {...prevInput,now:today}\r\n            \r\n        })\r\n    }\r\n    \r\n\r\n\r\n    function addSelectedAccountId(id){\r\n        setDepositInput(prevValue=>{\r\n            return {...prevValue,\r\n                toAccountId:id.accountNumber,\r\n                initialAmount:id.initialAmount\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    function handleClick(event){\r\n        props.toDeposit(depositInput);\r\n        event.preventDefault();\r\n        setDepositInput({\r\n            transactionType:\"deposit\",\r\n            accountType:\"\",\r\n            toAccountId:\"\",\r\n            toAccount:\"\",\r\n            amount:\"\",\r\n            note:\"\"\r\n        })\r\n        setNotif(<SuccessNotif\r\n            messege=\"Successfully deposited\" />)\r\n        props.addToTransaction(depositInput)\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"bg-gray-200 h-full pt-2 font-sans\">\r\n            <div className=\"container\">\r\n            <div>{notif}</div>\r\n                <div className=\"inputs w-full max-w-2xl p-6 mx-auto\">\r\n                    <h2 className=\"text-2xl text-gray-900\">Select Account</h2>\r\n                    <form className=\"mt-6 border-t border-gray-400 pt-4\">\r\n                        <div className='flex flex-wrap -mx-3 mb-6'>\r\n                            <div className='w-full md:w-full px-3 mb-6'>\r\n                                <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2'>Select which accout to deposit</label>\r\n                                <div className=\"flex-shrink w-full inline-block relative\">\r\n                                    <select \r\n                                        value={depositInput.toAccount}\r\n                                        name= \"toAccount\"\r\n                                        onChange={handleChange}\r\n                                        className=\"block appearance-none text-gray-600 w-full bg-white border border-gray-400 shadow-inner px-4 py-2 pr-8 rounded\">\r\n                                       <option>choose ...</option>\r\n                                        {accountToMap.map((account,index)=>{\r\n                        \r\n                                            return(\r\n                                                <BankAccountOptionTwo\r\n                                                key={index+4763}\r\n                                                accounttype={props.accountType}\r\n                                                addSelectedAccountId={addSelectedAccountId}\r\n                                                findSelectedAccount={props.findSelectedAccount}\r\n                                                accountName={account.accountName}\r\n                                                accountNumber={account.accountNumber}\r\n                                                initialAmount={account.initialAmount}\r\n                                                 />)\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"pointer-events-none absolute top-0 mt-3  right-0 flex items-center px-2 text-gray-600\">\r\n                                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n                            <div className=\"personal w-full border-t border-gray-400 pt-4\">\r\n                                <h2 className=\"text-2xl text-gray-900\">Amount detail:</h2>\r\n                                <div className=\"flex items-center justify-between mt-4\">\r\n                                    <div className='w-full md:w-1/2 px-3 mb-6'>\r\n                                        <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Amount</label>\r\n                                        <input \r\n                                        value={depositInput.amount}\r\n                                        onChange={handleChange}\r\n                                        name=\"amount\"\r\n                                        className='appearance-none block w-full bg-white text-gray-700 border border-gray-400 shadow-inner rounded-md py-3 px-4 leading-tight focus:outline-none  focus:border-gray-500' type='number'  required/>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className='w-full md:w-full px-3 mb-6'>\r\n                                    <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Note</label>\r\n                                    <textarea\r\n                                    value={depositInput.note}\r\n                                    onChange={handleChange}\r\n                                    name=\"note\"\r\n                                     placeholder=\"Note(Optional)\" \r\n                                     className='bg-gray-100 rounded-md border leading-normal resize-none w-full h-20 py-2 px-3 shadow-inner border border-gray-400 font-medium placeholder-gray-700 focus:outline-none focus:bg-white' ></textarea>\r\n                                </div>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button \r\n                                    onClick={handleClick}\r\n                                    className=\"appearance-none bg-green-200 px-2 py-1 shadow-sm border border-gray-400 rounded-md mr-3\" \r\n                                    type=\"submit\">Deposit</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React, { useState } from \"react\";\r\nimport Modal from \"@material-tailwind/react/Modal\";\r\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\r\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\r\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport DepositForm from \"./DepositForm\";\r\n\r\nexport default function DepositModal(props) {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"blue\"\r\n                type=\"button\"\r\n                buttonType=\"outline\"\r\n                onClick={(e) => setShowModal(true)}\r\n                ripple=\"light\"\r\n            >\r\n                <div className=\"p-3 mr-4 bg-blue-700 text-white rounded-full\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n</svg>\r\n      </div>\r\n      <div>\r\n        <p className=\"mb-2 text-sm font-medium text-gray-900\">Deposit</p>\r\n        \r\n      </div>\r\n            </Button>\r\n            \r\n            <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\r\n                <ModalHeader toggler={() => setShowModal(false)}>\r\n                    Deposit\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                <DepositForm\r\n                addToTimeStamps={props.addToTimeStamps}\r\n                addToTransaction={props.addToTransaction}\r\n                findSelectedAccount={props.findSelectedAccount}\r\n                toDeposit={props.toDeposit}\r\n                myAccounts={props.myAccounts} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button \r\n                        color=\"red\"\r\n                        buttonType=\"link\"\r\n                        onClick={(e) => setShowModal(false)}\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport Input from \"@material-tailwind/react/Input\";\r\n\r\nexport default function ExpensesInput(props) {\r\n\r\n    function handleChange(event){\r\n        props.onChange(event);\r\n        console.log(event)\r\n    }\r\n\r\n\r\n    return (\r\n        <Input\r\n            name={props.name}\r\n            value={props.value}\r\n            onChange={handleChange}\r\n            type={props.type}\r\n            color=\"lightBlue\"\r\n            size=\"lg\"\r\n            outline={false}\r\n            placeholder={props.placeholder}\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\n\r\nexport default function ExpensesButton(props) {\r\n\r\n    function handleClick(){\r\n        props.toAdd();\r\n    }\r\n    return (\r\n        <Button\r\n            onClick={handleClick}\r\n            color=\"lightBlue\"\r\n            buttonType=\"outline\"\r\n            size=\"regular\"\r\n            rounded={true}\r\n            block={false}\r\n            iconOnly={false}\r\n            ripple=\"dark\"\r\n        >\r\n            Add\r\n        </Button>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function ExpenceCard(props){\r\n\r\n    function handleClick(){\r\n        props.toDelete(props.id);\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-content-profil flex justify-between items-center\">\r\n        <div className=\" flex gap-x-2 items-center\">\r\n          <div className=\"avatar h-10 w-10 rounded-full border-4 border-opacity-40\">\r\n          <i className=\"fas fa-cart-plus\"></i></div>\r\n          <div className=\"card-name-user text-xs\">\r\n            <div className=\"font-bold text-base\">{props.itemName}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <h6 className=\"font-bold\">{props.itemPrice}</h6>\r\n\r\n        <div className=\"card-action\">\r\n          <button \r\n          onClick={handleClick} \r\n          className=\"flex items-center px-2 py-1 text-xs text-white bg-red-500 hover:bg-red-600\">\r\n          <i className=\"fas fa-trash-alt\"></i>\r\n            <span className=\"\">Delete</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n}","import React from 'react'\r\nimport ExpenceCard from './ExpenceCard'\r\n\r\nexport default function ExpensesTable(props){\r\n    const passedItems = props.items;\r\n    return(\r\n  \r\n\r\n  <div className=\"w-96 h-full bg-white p-5 rounded-xl bg-opacity-60 backdrop-filter backdrop-blur-lg\">\r\n    <div className=\"header-card flex justify-between font-semibold\">\r\n      <div className=\"\">Item</div>\r\n      <div className=\"flex items-center gap-x-1 text-sm text-blue-500\">\r\n         <svg className=\"h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" >\r\n          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n          <path d=\"M1.181 12C2.121 6.88 6.608 3 12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9zM12 17a5 5 0 1 0 0-10 5 5 0 0 0 0 10zm0-2a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\" />\r\n       </svg>\r\n      <span>See all</span>\r\n      </div>\r\n    </div>\r\n    \r\n   \r\n\r\n    <div className=\"card-content divide-y flex flex-col gap-y-3 mt-5\">\r\n\r\n     {passedItems.map((item,index)=>{\r\n         return <ExpenceCard \r\n            key={index}\r\n            id={index}\r\n            toDelete={props.toDelete}\r\n             itemName={item.itemName}\r\n             itemPrice ={item.itemPrice}\r\n         />\r\n     })}\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"@material-tailwind/react/Modal\";\r\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\r\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\r\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport Input from \"./Input\";\r\nimport ExpensesButton from \"./ExpensesButton\";\r\nimport ExpensesTable from \"./ExpensesTable\";\r\n\r\n\r\nexport default function ExpensesModal() {\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [expenseItem, setExpenseItem]=useState({\r\n        itemName:\"\",\r\n        itemPrice:\"\"\r\n    })\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    function handleInput(passedEvent){\r\n        const {name, value}= passedEvent.target;\r\n        setExpenseItem(prevValue=>{\r\n            return {...prevValue,\r\n            [name]:value}\r\n        })\r\n\r\n    }\r\n\r\n    function hadleAddButton(){\r\n        setItems(prevItems =>{\r\n            return [...prevItems,expenseItem]\r\n            \r\n        })\r\n        setExpenseItem({\r\n            itemName:\"\",\r\n            itemPrice:\"\"\r\n        })\r\n    }\r\n\r\n    function deleteFunction(id){\r\n        setItems(prevValue=>{\r\n            return prevValue.filter((item, index)=>{\r\n                return index !==id\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"blue\"\r\n                type=\"button\"\r\n                buttonType=\"outline\"\r\n                onClick={(e) => setShowModal(true)}\r\n                ripple=\"light\"\r\n            >\r\n                <div className=\"p-3 mr-4 bg-blue-700 text-white rounded-full\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n                </svg>\r\n                </div>\r\n                <div>\r\n                 <p className=\"mb-2 text-sm font-medium text-gray-900\">Expenses</p>\r\n                 </div>\r\n            </Button>\r\n\r\n            <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\r\n\r\n                <ModalHeader toggler={() => setShowModal(false)}>\r\n                    Expenses\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n               \r\n               {/* input form  */}\r\n\r\n         <div className=\"flex flex-col justify-center items-center\">\r\n             <Input\r\n                value={expenseItem.itemName}\r\n                onChange={handleInput}\r\n                name=\"itemName\"\r\n                placeholder=\"Input Item\"\r\n                type=\"text\" />\r\n\r\n            <Input\r\n                value={expenseItem.itemPrice} \r\n                onChange={handleInput}\r\n                name =\"itemPrice\"\r\n                placeholder=\"Input Price\"\r\n                type=\"number\" />\r\n\r\n             <ExpensesButton \r\n                 toAdd={hadleAddButton}\r\n             />\r\n        </div>\r\n\r\n        <div className=\"bg-gray-300 rounded-md my-8\">\r\n            <ExpensesTable \r\n                toDelete={deleteFunction}\r\n                items={items}\r\n            />\r\n        </div>\r\n        \r\n                </ModalBody>\r\n\r\n\r\n                <ModalFooter>\r\n                    <Button \r\n                        color=\"red\"\r\n                        buttonType=\"link\"\r\n                        onClick={(e) => setShowModal(false)}\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                    <Button\r\n                        color=\"green\"\r\n                        onClick={(e) => setShowModal(false)}\r\n                        ripple=\"light\"\r\n                    >\r\n                        Save Changes\r\n                    </Button>\r\n                    \r\n                </ModalFooter>\r\n            \r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\n\r\nfunction BankAccountOption(props){\r\n\r\n    function handleClick(){\r\n        props.addSelectedAccountId(props);\r\n        props.addFromInitialAmount(props);\r\n    }\r\nreturn(<option onClick={handleClick}>{props.accountName} {props.accountNumber}</option>)\r\n}\r\n\r\nexport default BankAccountOption;","\r\nimport React,{useEffect, useState} from 'react';\r\nimport AlertNotif from './AlertNotif';\r\nimport BankAccountOptionTwo from './BackAccountOptionTwo';\r\nimport BankAccountOption from './BankAccountOption';\r\nimport SuccessNotif from './SuccessNotif';\r\n\r\n\r\nexport default function MoneyTransferForm(props){\r\n    const [notif, setNotif]=useState(\"\");\r\n    const contactsToMap = props.contacts;\r\n    const myAccountsToMap= props.myAccounts; \r\n    const [accountToMap, setAccountToMap]= useState([]);\r\n    const [transferInfo,setTransferInfo]= useState({\r\n        transactionType:\"transfer\",\r\n        fromInitialAmount:\"\",\r\n        fromAccount:\"\",\r\n        accountType:\"\",\r\n        toAccount:\"\",\r\n        amount:\"\",\r\n        note:\"\",\r\n        fromAccountId:\"\",\r\n        toAccountId:\"\"\r\n    })\r\n\r\n        useEffect(()=>{\r\n           \r\n        },[accountToMap])\r\n\r\n        function handleChange(event){\r\n            const today= new Date();\r\n            const {name,value}= event.target;\r\n            if(name === \"amount\"){\r\n                setTransferInfo(prevInfo=>{\r\n                    return{...prevInfo,\r\n                    [name]:parseInt(value)}\r\n                })\r\n            }else{\r\n                setTransferInfo(prevInfo=>{\r\n                    return{...prevInfo,\r\n                    [name]:value}\r\n                })\r\n            }\r\n\r\n            setTransferInfo(prevInput=>{\r\n                return {...prevInput,now:today}\r\n                \r\n            })\r\n        }\r\n\r\n\r\n\r\n        function addFromInitialAmount(account){\r\n            setTransferInfo(prevValue=>{\r\n                return{...prevValue,\r\n                fromInitialAmount:account.fromInitialAmount}\r\n            })\r\n        }\r\n        function addSelectedAccountId(account){\r\n            const {name, accountNumber, accountType}= account;\r\n            console.log(account)\r\n            setTransferInfo(prevValue=>{\r\n                return{...prevValue,\r\n                    [name]:parseInt(accountNumber)\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        function handleClick(event){\r\n            event.preventDefault()\r\n        \r\n            if(transferInfo.fromInitialAmount < transferInfo.amount){\r\n                setNotif(<AlertNotif \r\n                    messege=\"Can't transfer amount exceeding your current balance\"\r\n                />)\r\n            }else{\r\n                props.toDeposit(transferInfo)\r\n                props.toWithdraw(transferInfo)\r\n                // props.toTransfer(transferInfo);\r\n                setTransferInfo({\r\n                    transactionType:\"transfer\",\r\n                    fromAccount:\"\",\r\n                    accountType:\"\",\r\n                    toAccount:\"\",\r\n                    amount:\"\",\r\n                    note:\"\",\r\n                    fromAccountId:\"\",\r\n                    toAccountId:\"\"\r\n                })\r\n                setNotif(<SuccessNotif\r\n                messege=\"Successfully Transfered\" />)\r\n                props.addToTransaction(transferInfo)\r\n            }\r\n            \r\n\r\n        }\r\n\r\n\r\n    return(\r\n        <div className=\"bg-gray-200 h-full pt-2 font-sans\">\r\n            <div className=\"container\">\r\n            <div>{notif}</div>\r\n                <div className=\"inputs w-full max-w-2xl p-6 mx-auto\">\r\n                    <h2 className=\"text-2xl text-gray-900\">Select Account</h2>\r\n                    <form className=\"mt-6 border-t border-gray-400 pt-4\">\r\n                        <div className='flex flex-wrap -mx-3 mb-6'>\r\n                               {/* transfer from */}\r\n                            <div className='w-full md:w-full px-3 mb-6'>\r\n                                <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2'>Transfer from</label>\r\n                                <div className=\"flex-shrink w-full inline-block relative\">\r\n                                    <select \r\n                                        value={transferInfo.fromAccount}\r\n                                        name=\"fromAccount\"\r\n                                        onChange={handleChange}\r\n                                        className=\"block appearance-none text-gray-600 w-full bg-white border border-gray-400 shadow-inner px-4 py-2 pr-8 rounded\">\r\n                                       <option>choose ...</option>\r\n                                      { myAccountsToMap.map((myAccount,index)=>{\r\n                                          return <BankAccountOption\r\n                                                    key={index+3324}\r\n                                                    fromInitialAmount={myAccount.initialAmount}\r\n                                                    addFromInitialAmount={addFromInitialAmount}\r\n                                                    name=\"fromAccountId\"\r\n                                                    addSelectedAccountId={addSelectedAccountId}\r\n                                                    accountName={myAccount.accountName}\r\n                                                    accountNumber={myAccount.accountNumber}\r\n                                                    />\r\n                                      })}\r\n                                    </select>\r\n                                    <div className=\"pointer-events-none absolute top-0 mt-3  right-0 flex items-center px-2 text-gray-600\">\r\n                                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                    {/* type of account to transfer to */}\r\n                            <div className='w-full md:w-full px-3 mb-6'>\r\n                                <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2'>Transfer to own account or contacts</label>\r\n                                <div className=\"flex-shrink w-full inline-block relative\">\r\n                                    <select \r\n                                    value={transferInfo.accountType}\r\n                                        name=\"accountType\"\r\n                                        onChange={handleChange}\r\n                                        className=\"block appearance-none text-gray-600 w-full bg-white border border-gray-400 shadow-inner px-4 py-2 pr-8 rounded\">\r\n                                       <option>choose ...</option>\r\n                                       <option onClick={()=>setAccountToMap(myAccountsToMap)}>Own Account</option>\r\n                                       <option onClick={()=>setAccountToMap(contactsToMap)}>Contacts</option>\r\n                                        \r\n                                    </select>\r\n                                    <div className=\"pointer-events-none absolute top-0 mt-3  right-0 flex items-center px-2 text-gray-600\">\r\n                                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                    {/* transfer to */}\r\n                            <div className='w-full md:w-full px-3 mb-6'>\r\n                                <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2'>Transfer to</label>\r\n                                <div className=\"flex-shrink w-full inline-block relative\">\r\n                                    <select \r\n                                        value={transferInfo.toAccount}\r\n                                        name=\"toAccount\"\r\n                                        onChange={handleChange}\r\n                                        className=\"block appearance-none text-gray-600 w-full bg-white border border-gray-400 shadow-inner px-4 py-2 pr-8 rounded\">\r\n                                       <option>choose ...</option>\r\n                                     { accountToMap.map((account,index)=>{\r\n                                          return <BankAccountOptionTwo\r\n                                                    key={index+8503}\r\n                                                    name=\"toAccountId\"\r\n                                                    addSelectedAccountId={addSelectedAccountId}\r\n                                                    accountType={account.accountType}\r\n                                                    accountName={account.accountName}\r\n                                                    accountNumber={account.accountNumber}\r\n                                                    />\r\n                                      })}  \r\n                                    </select>\r\n                                    <div className=\"pointer-events-none absolute top-0 mt-3  right-0 flex items-center px-2 text-gray-600\">\r\n                                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* amount */}\r\n                            <div className=\"personal w-full border-t border-gray-400 pt-4\">\r\n                                <h2 className=\"text-2xl text-gray-900\">Amount detail:</h2>\r\n                                <div className=\"flex items-center justify-between mt-4\">\r\n                                    <div className='w-full md:w-1/2 px-3 mb-6'>\r\n                                        <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Amount</label>\r\n                                        <input \r\n                                        value={transferInfo.amount}\r\n                                        onChange={handleChange}\r\n                                        name=\"amount\"\r\n                                        className='appearance-none block w-full bg-white text-gray-700 border border-gray-400 shadow-inner rounded-md py-3 px-4 leading-tight focus:outline-none  focus:border-gray-500' type='number'  required/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* note */}\r\n                                <div className='w-full md:w-full px-3 mb-6'>\r\n                                    <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Note</label>\r\n                                    <textarea\r\n                                    value={transferInfo.note}\r\n                                    onChange={handleChange}\r\n                                    name=\"note\"\r\n                                     placeholder=\"Note(Optional)\" \r\n                                     className='bg-gray-100 rounded-md border leading-normal resize-none w-full h-20 py-2 px-3 shadow-inner border border-gray-400 font-medium placeholder-gray-700 focus:outline-none focus:bg-white' ></textarea>\r\n                                </div>\r\n                                <div className=\"flex justify-end\">\r\n                                <div className=\"flex justify-end\">\r\n                                    <button \r\n                                    onClick={handleClick}\r\n                                    className=\"appearance-none bg-green-200 px-2 py-1 shadow-sm border border-gray-400 rounded-md mr-3\" \r\n                                    type=\"submit\">Transfer Money</button>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React, { useState } from \"react\";\r\nimport Modal from \"@material-tailwind/react/Modal\";\r\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\r\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\r\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport MoneyTransferForm from \"./MoneyTransferForm\";\r\n\r\nexport default function TransferMoneyModal(props) {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"blue\"\r\n                type=\"button\"\r\n                buttonType=\"outline\"\r\n                onClick={(e) => setShowModal(true)}\r\n                ripple=\"light\"\r\n            >\r\n               <div className=\"p-3 mr-4 bg-blue-700 text-white rounded-full\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n  <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\r\n</svg>\r\n      </div>\r\n      <div>\r\n        <p className=\"mb-2 text-sm font-medium text-gray-900\">Transfer Money</p>\r\n    </div>\r\n            </Button>\r\n\r\n            <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\r\n                <ModalHeader toggler={() => setShowModal(false)}>\r\n                Transfer Money\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                   <MoneyTransferForm\r\n                   addToTransaction={props.addToTransaction}\r\n                   toDeposit={props.toDeposit}\r\n                   toWithdraw={props.toWithdraw}\r\n                //    toTransfer={props.toTransfer}\r\n                   contacts={props.contacts}\r\n                   myAccounts={props.myAccounts} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button \r\n                        color=\"red\"\r\n                        buttonType=\"link\"\r\n                        onClick={(e) => setShowModal(false)}\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                   \r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","\r\nimport React,{useState} from 'react';\r\nimport AlertNotif from './AlertNotif';\r\nimport BankAccountOptionTwo from './BackAccountOptionTwo';\r\nimport SuccessNotif from './SuccessNotif';\r\n\r\n\r\nexport default function WithdrawalForm(props){\r\n    const accountToMap = props.myAccounts;\r\n    const [withdrawInput, setWithdrawInput]= useState({\r\n        transactionType:\"withdraw\",\r\n        initialAmount:\"\",\r\n        accountType:\"\",\r\n        fromAccountId:\"\",\r\n        fromAccount:\"\",\r\n        amount:\"\",\r\n        note:\"\"\r\n    })\r\n\r\n    const[notif, setNotif]= useState(\"\")\r\n\r\n    function handleChange(event){\r\n        const today= new Date();\r\n        const {name, value}= event.target;\r\n        if(name===\"amount\"){\r\n            setWithdrawInput(prevInput=>{\r\n                return{...prevInput,\r\n                [name]:parseInt(value)}\r\n            })\r\n        }else{\r\n            setWithdrawInput(prevInput=>{\r\n                return{...prevInput,\r\n                [name]:value}\r\n            })\r\n        }\r\n        setWithdrawInput(prevInput=>{\r\n            return {...prevInput,now:today}\r\n            \r\n        })\r\n        \r\n    }\r\n\r\n    function addSelectedAccountId(id){\r\n        \r\n        setWithdrawInput(prevValue=>{\r\n            return {...prevValue,\r\n                fromAccountId:id.accountNumber,\r\n                initialAmount:id.initialAmount\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleClick(event){\r\n        event.preventDefault();\r\n      \r\n\r\n        if(withdrawInput.initialAmount < withdrawInput.amount){\r\n            setNotif(<AlertNotif \r\n                messege= \"Withdrawal amount can't be higher that your current balance\"\r\n            />)\r\n        }else{\r\n            props.toWithdraw(withdrawInput);\r\n            props.addToTransaction(withdrawInput)\r\n            setWithdrawInput({\r\n                transactionType:\"withdraw\",\r\n                accountType:\"\",\r\n                fromAccountId:\"\",\r\n                fromAccount:\"\",\r\n                amount:\"\",\r\n                note:\"\"\r\n            })\r\n           setNotif(<SuccessNotif\r\n               messege=\"success!\"\r\n           />)\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"bg-gray-200 h-full pt-2 font-sans\">\r\n            <div className=\"container\">\r\n            <div>{notif}</div>\r\n                <div className=\"inputs w-full max-w-2xl p-6 mx-auto\">\r\n                    <h2 className=\"text-2xl text-gray-900\">Select Account</h2>\r\n                    <form className=\"mt-6 border-t border-gray-400 pt-4\">\r\n                        <div className='flex flex-wrap -mx-3 mb-6'>\r\n                            <div className='w-full md:w-full px-3 mb-6'>\r\n                                <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2'>Select which accout to withdraw</label>\r\n                                <div className=\"flex-shrink w-full inline-block relative\">\r\n                                    <select \r\n                                        value={withdrawInput.fromAccount}\r\n                                        name= \"fromAccount\"\r\n                                        onChange={handleChange}\r\n                                        className=\"block appearance-none text-gray-600 w-full bg-white border border-gray-400 shadow-inner px-4 py-2 pr-8 rounded\">\r\n                                       <option>choose ...</option>\r\n                                        {accountToMap.map((account,index)=>{\r\n                        \r\n                                            return(\r\n                                                <BankAccountOptionTwo\r\n                                                key={index+49674}\r\n                                                accountType={account.accountType}\r\n                                                addSelectedAccountId={addSelectedAccountId}\r\n                                                findSelectedAccount={props.findSelectedAccount}\r\n                                                accountName={account.accountName}\r\n                                                accountNumber={account.accountNumber}\r\n                                                initialAmount={account.initialAmount}\r\n                                                 />)\r\n                                        })}\r\n                                    </select>\r\n                                    <div className=\"pointer-events-none absolute top-0 mt-3  right-0 flex items-center px-2 text-gray-600\">\r\n                                        <svg className=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n                            <div className=\"personal w-full border-t border-gray-400 pt-4\">\r\n                                <h2 className=\"text-2xl text-gray-900\">Amount detail:</h2>\r\n                                <div className=\"flex items-center justify-between mt-4\">\r\n                                    <div className='w-full md:w-1/2 px-3 mb-6'>\r\n                                        <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Amount</label>\r\n                                        <input \r\n                                        value={withdrawInput.amount}\r\n                                        onChange={handleChange}\r\n                                        name=\"amount\"\r\n                                        className='appearance-none block w-full bg-white text-gray-700 border border-gray-400 shadow-inner rounded-md py-3 px-4 leading-tight focus:outline-none  focus:border-gray-500' type='number'  required/>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className='w-full md:w-full px-3 mb-6'>\r\n                                    <label className='block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2' >Note</label>\r\n                                    <textarea\r\n                                    value={withdrawInput.note}\r\n                                    onChange={handleChange}\r\n                                    name=\"note\"\r\n                                     placeholder=\"Note(Optional)\" \r\n                                     className='bg-gray-100 rounded-md border leading-normal resize-none w-full h-20 py-2 px-3 shadow-inner border border-gray-400 font-medium placeholder-gray-700 focus:outline-none focus:bg-white' ></textarea>\r\n                                </div>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button \r\n                                    onClick={handleClick}\r\n                                    className=\"appearance-none bg-green-200 px-2 py-1 shadow-sm border border-gray-400 rounded-md mr-3\" \r\n                                    type=\"submit\">Withdraw</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React, { useState } from \"react\";\r\nimport Modal from \"@material-tailwind/react/Modal\";\r\nimport ModalHeader from \"@material-tailwind/react/ModalHeader\";\r\nimport ModalBody from \"@material-tailwind/react/ModalBody\";\r\nimport ModalFooter from \"@material-tailwind/react/ModalFooter\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport WithdrawalForm from \"./WithdrawalForm\";\r\n\r\n\r\nexport default function WithdrawModal(props) {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color=\"blue\"\r\n                type=\"button\"\r\n                buttonType=\"outline\"\r\n                onClick={(e) => setShowModal(true)}\r\n                ripple=\"light\"\r\n            >\r\n                <div className=\"p-3 mr-4 bg-blue-700 text-white rounded-full\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n</svg>\r\n      </div>\r\n      <div>\r\n        <p className=\"mb-2 text-sm font-medium text-gray-900\">Withdraw</p>\r\n        \r\n      </div>\r\n            </Button>\r\n            \r\n            <Modal size=\"lg\" active={showModal} toggler={() => setShowModal(false)}>\r\n                <ModalHeader toggler={() => setShowModal(false)}>\r\n                    Withdraw\r\n                </ModalHeader>\r\n                <ModalBody>\r\n               <WithdrawalForm\r\n               addToTransaction={props.addToTransaction}\r\n               toWithdraw={props.toWithdraw}\r\n               myAccounts ={props.myAccounts} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button \r\n                        color=\"red\"\r\n                        buttonType=\"link\"\r\n                        onClick={(e) => setShowModal(false)}\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Close\r\n                    </Button>\r\n\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport DepositModal from './DepositModal';\r\nimport ExpensesModal from './ExpensesModal';\r\nimport TransferMoneyModal from './TransferMoneyModal';\r\nimport WithdrawModal from './WithdrawModal';\r\n\r\nfunction ResponsiveCard(props){\r\n   return (<section className=\"container px-6 py-4 mx-auto justify-center items-center\">\r\n  <div className=\"grid gap-6 mb-8 md:grid-cols-2 md:grid-rows-2\">\r\n  {/* card1 */}\r\n  \r\n     <ExpensesModal />\r\n   \r\n{/* card2 */}\r\n   <TransferMoneyModal\r\n   addToTimeStamps={props.addToTimeStamps}\r\n   addToTransaction={props.addToTransaction}\r\n   toWithdraw={props.toWithdraw}\r\n   toDeposit={props.toDeposit}\r\n   toTransfer={props.toTransfer}\r\n   contacts={props.contacts}\r\n   myAccounts={props.myAccounts} />\r\n   {/* card3 */}\r\n   <DepositModal\r\n   addToTimeStamps={props.addToTimeStamps}\r\n   addToTransaction={props.addToTransaction}\r\n   findSelectedAccount={props.findSelectedAccount}\r\n   toDeposit={props.toDeposit}\r\n   myAccounts={props.myAccounts} />\r\n    {/* <!-- Card 4 --> */}\r\n\r\n    <WithdrawModal\r\n    addToTimeStamps={props.addToTimeStamps}\r\n    addToTransaction={props.addToTransaction}\r\n    toWithdraw={props.toWithdraw}\r\n    myAccounts ={props.myAccounts}/>\r\n  </div>\r\n\r\n</section>)\r\n}\r\n\r\nexport default ResponsiveCard;","import React from 'react';\r\nimport AccountCard from './AccountCard';\r\nimport ResponsiveCard from './ResponsiveCard';\r\n\r\nfunction Section(props){\r\n    return(\r\n        <section className=\" lg:h-4/5 dark:bg-gray-900 lg:py-12 lg:flex lg:justify-center\">\r\n        <div className=\"bg-white dark:bg-gray-800 lg:mx-8 lg:flex lg:w-full  lg:shadow-lg lg:rounded-lg\">\r\n            <div className=\"lg:w-1/2\">\r\n                <div className=\"flex justify-center h-64  bg-cover lg:rounded-lg lg:h-full items-center\">\r\n                <AccountCard \r\n                    accountDetail={props.accountDetail}\r\n                /></div>\r\n            </div>\r\n\r\n            <div className=\"flex justiy-center items-center bg-white lg:w-2/4 px-6 py-12 bg-cover h-64 lg:h-full lg:rounded-lg\">\r\n            <ResponsiveCard\r\n            addToTimeStamps={props.addToTimeStamps}\r\n            addToTransaction={props.addToTransaction}\r\n            toTransfer={props.toTransfer}\r\n            findSelectedAccount={props.findSelectedAccount}\r\n            toWithdraw={props.toWithdraw}\r\n            toDeposit={props.toDeposit}\r\n            contacts={props.contacts}\r\n            myAccounts={props.myAccounts} />\r\n                \r\n            </div>\r\n        </div>\r\n   </section>\r\n   )\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport AlertNotif from './AlertNotif';\r\nimport Heading from './Heading';\r\nimport Section from './Section';\r\n\r\nfunction Dashboard(props){\r\nreturn (<div id=\"dashboard\" className=\"ml-64 bg-gradient-to-r from-blue-300 to-blue-700 h-screen\">\r\n<Heading\r\nname =\"Dashboard\" />\r\n<Section\r\ntransactions={props.transactions}\r\naddToTransaction ={props.addToTransaction}\r\ntoTransfer={props.toTransfer}\r\nfindSelectedAccount={props.findSelectedAccount}\r\ntoWithdraw={props.toWithdraw}\r\ntoDeposit={props.toDeposit}\r\ncontacts={props.contacts}\r\nmyAccounts={props.myAccounts}\r\naccountDetail={props.accountDetail} />\r\n</div>   )\r\n}\r\n\r\nexport default Dashboard;","import React,{useState} from \"react\";\r\nimport Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport CardFooter from \"@material-tailwind/react/CardFooter\";\r\nimport InputIcon from \"@material-tailwind/react/InputIcon\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport H5 from \"@material-tailwind/react/Heading5\";\r\n\r\n\r\nexport default function AddFriend(props) {\r\nconst [contactInfo, setContactInfo] = useState({\r\n    accountType:\"Contacts\",\r\n    accountName:\"\",\r\n    accountNumber:\"\",\r\n    initialAmount:\"\"\r\n})\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        if (name === \"accountName\"){\r\n            setContactInfo(prevValue=>{\r\n                return {\r\n                    ...prevValue,\r\n                    [name]: value\r\n                }\r\n            })\r\n        }else{\r\n            setContactInfo(prevValue=>{\r\n                return {\r\n                    ...prevValue,\r\n                    [name]:parseInt( value)\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    function toSubmit(){\r\n        props.addContact(contactInfo);\r\n        setContactInfo({\r\n            accountType:\"Contacts\",\r\n            accountName:\"\",\r\n            accountNumber:\"\",\r\n            initialAmount:\"\"\r\n        })\r\n    }\r\n    return (\r\n        <Card className=\"h-full\">\r\n            <CardHeader color=\"blue\" size=\"lg\">\r\n                <H5 color=\"white\">Add Contact</H5>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <div className=\"mt-4 mb-8 px-4\">\r\n                    <InputIcon\r\n                        name=\"accountName\"\r\n                        value={contactInfo.accountName}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Account Name\"\r\n                        iconName=\"account_circle\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-8 px-4\">\r\n                    <InputIcon\r\n                        name=\"accountNumber\"\r\n                        value={contactInfo.accountNumber}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Account Number\"\r\n                        iconName=\"payment\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-4 px-4\">\r\n                    <InputIcon\r\n                        name=\"initialAmount\"\r\n                        value={contactInfo.initialAmount}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Initial Amount\"\r\n                        iconName=\"money\"\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n            <CardFooter>\r\n                <div className=\"flex justify-center\">\r\n                    <Button\r\n                        onClick={toSubmit}\r\n                        color=\"blue\"\r\n                        buttonType=\"filled\"\r\n                        size=\"lg\"\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </CardFooter>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function ContactCard(props){\r\n\r\n    function handleDeleteButton(){\r\n        props.toDeleteContact(props.id)\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-content-profil pt-3 flex justify-between items-center\">\r\n        <div className=\" flex gap-x-2 items-center\">\r\n          <div className=\"avatar h-10 w-10 rounded-full border-4 border-opacity-40 bg-white flex justify-center items-center\" >\r\n          <i className=\"fas fa-id-card\"></i> \r\n          </div>\r\n      \r\n          <div className=\"card-name-user text-xs\">\r\n            <h2 className=\"font-bold\">{props.accountName}</h2>\r\n            <div className=\" flex items-center gap-x-1\">\r\n            <h3 className=\"font-semibold\">{props.accountNumber}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h1>{props.initialAmount}</h1>\r\n        <div className=\"flex justify-evenly\">\r\n        <div className=\"card-action\">\r\n           <button className=\"flex items-center px-2 py-1 text-xs text-white bg-green-500 hover:bg-green-600\">\r\n           <i className=\"fas fa-paper-plane\"></i>\r\n            <span className=\"\"> Send Money</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"card-action\">\r\n           <button\r\n           onClick={handleDeleteButton}\r\n            className=\"flex items-center px-2 py-1 text-xs text-white bg-red-900 hover:bg-red-500\">\r\n                  <i className=\"fas fa-trash-alt\"></i>\r\n            <span className=\"\">Delete</span>\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport ContactCard from './ContactCard';\r\n\r\nexport default function FriendsTable(props){\r\n    const contactMap = props.contacts;\r\nreturn(\r\n\r\n  <div className=\"w-full h-full bg-white p-5 rounded-xl bg-opacity-60 backdrop-filter backdrop-blur-lg\">\r\n    <div className=\"header-card flex justify-between font-semibold\">\r\n      <div className=\"\">Contact List</div>\r\n      <div className=\"flex items-center gap-x-1 text-sm text-blue-500\">\r\n         <svg className=\"h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n          <path d=\"M1.181 12C2.121 6.88 6.608 3 12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9zM12 17a5 5 0 1 0 0-10 5 5 0 0 0 0 10zm0-2a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\" />\r\n        </svg>\r\n      <span>See all</span>\r\n      </div>\r\n    </div>\r\n    \r\n\r\n    <div className=\"card-content divide-y flex flex-col gap-y-3 mt-5\">\r\n\r\n     {contactMap.map((contact,index)=>{\r\n         return<ContactCard\r\n         key={index}\r\n         id={index}\r\n         toDeleteContact ={props.toDeleteContact}\r\n         accountName ={contact.accountName}\r\n         accountNumber={contact.accountNumber}\r\n         initialAmount={contact.initialAmount} />\r\n     })}\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n)\r\n}","import React, { useState } from \"react\";\r\nimport AddFriend from \"./AddFriend\";\r\nimport FriendsTable from \"./FriendsTable\";\r\nimport Heading from \"./Heading\";\r\n\r\nexport default function Friends(props){\r\n\r\n\r\nreturn(\r\n    <div id =\"friends\" className=\"ml-64 bg-gradient-to-r from-blue-300 to-blue-700 h-screen\">\r\n        <Heading \r\n        name=\"Contacts\" />\r\n        <div className=\"flex justify-evenly items-center h-full w-full\">\r\n       <div className=\" w-2/6 h-3/5\">\r\n           <AddFriend\r\n           \r\n           addContact={props.addContact} />\r\n       </div>\r\n        <div className=\"h-4/5 w-3/6\">\r\n        <FriendsTable \r\n        toDeleteContact={props.toDeleteContact} \r\n        contacts={props.contacts} />\r\n        </div>\r\n        </div>\r\n        \r\n    </div>\r\n)\r\n}","import React,{useState} from \"react\";\r\nimport Card from \"@material-tailwind/react/Card\";\r\nimport CardHeader from \"@material-tailwind/react/CardHeader\";\r\nimport CardBody from \"@material-tailwind/react/CardBody\";\r\nimport CardFooter from \"@material-tailwind/react/CardFooter\";\r\nimport InputIcon from \"@material-tailwind/react/InputIcon\";\r\nimport Button from \"@material-tailwind/react/Button\";\r\nimport H5 from \"@material-tailwind/react/Heading5\";\r\n\r\n\r\nexport default function AddAccount(props) {\r\nconst [accountInfo, setAccountInfo] = useState({\r\n    accountType:\"ownAccount\",\r\n    accountName:\"\",\r\n    accountNumber:\"\",\r\n    initialAmount:\"\"\r\n})\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n        if (name ===\"accountName\"){\r\n            setAccountInfo(prevValue=>{\r\n                return {\r\n                    ...prevValue,\r\n                    [name]:value\r\n                }\r\n            })\r\n        }else{\r\n            setAccountInfo(prevValue=>{\r\n                return {\r\n                    ...prevValue,\r\n                    [name]:parseInt(value)\r\n                }\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    function toSubmit(){\r\n        props.addMyAccount(accountInfo);\r\n        setAccountInfo({\r\n            accountType:\"ownAccount\",\r\n            accountName:\"\",\r\n            accountNumber:\"\",\r\n            initialAmount:\"\"\r\n        })\r\n\r\n    }\r\n    return (\r\n        <Card className=\"h-full\">\r\n            <CardHeader color=\"blue\" size=\"lg\">\r\n                <H5 color=\"white\">Add Account</H5>\r\n            </CardHeader>\r\n\r\n            <CardBody>\r\n                <div className=\"mt-4 mb-8 px-4\">\r\n                    <InputIcon\r\n                        name=\"accountName\"\r\n                        value={accountInfo.accountName}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Account Name\"\r\n                        iconName=\"account_circle\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-8 px-4\">\r\n                    <InputIcon\r\n                        name=\"accountNumber\"\r\n                        value={accountInfo.accountNumber}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Account Number\"\r\n                        iconName=\"payment\"\r\n                    />\r\n                </div>\r\n                <div className=\"mb-4 px-4\">\r\n                    <InputIcon\r\n                        name=\"initialAmount\"\r\n                        value={accountInfo.initialAmount}\r\n                        onChange={handleChange}\r\n                        type=\"number\"\r\n                        color=\"lightBlue\"\r\n                        placeholder=\"Initial Amount\"\r\n                        iconName=\"money\"\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n            <CardFooter>\r\n                <div className=\"flex justify-center\">\r\n                    <Button\r\n                        onClick={toSubmit}\r\n                        color=\"blue\"\r\n                        buttonType=\"filled\"\r\n                        size=\"lg\"\r\n                        ripple=\"dark\"\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </CardFooter>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function MyAccountCard(props){\r\n\r\n    function handleDeleteButton(){\r\n        props.deleteMyAccount(props.id)\r\n    }\r\n\r\n    return(\r\n        <div className=\"card-content-profil pt-3 flex justify-between items-center\">\r\n        <div className=\" flex gap-x-2 items-center\">\r\n          <div className=\"avatar h-10 w-10 rounded-full border-4 border-opacity-40 bg-white flex justify-center items-center\" >\r\n          <i className=\"fas fa-id-card\"></i> \r\n          </div>\r\n      \r\n          <div className=\"card-name-user text-xs\">\r\n            <h2 className=\"font-bold\">{props.accountName}</h2>\r\n            <div className=\" flex items-center gap-x-1\">\r\n            <h3 className=\"font-semibold\">{props.accountNumber}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h1>{props.initialAmount}</h1>\r\n        <div className=\"flex justify-evenly\">\r\n        <div className=\"card-action\">\r\n           <button className=\"flex items-center px-2 py-1 text-xs text-white bg-green-500 hover:bg-green-600\">\r\n           <i className=\"fas fa-user-edit\"></i>\r\n            <span className=\"\"> Edit</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"card-action\">\r\n           <button\r\n           onClick={handleDeleteButton}\r\n            className=\"flex items-center px-2 py-1 text-xs text-white bg-red-900 hover:bg-red-500\">\r\n                  <i className=\"fas fa-trash-alt\"></i>\r\n            <span className=\"\">Delete</span>\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport ContactCard from './ContactCard';\r\nimport MyAccountCard from './MyAccountCard';\r\n\r\nexport default function MyAccountsTable(props){\r\n    const accountMap = props.myAccounts;\r\nreturn(\r\n\r\n  <div className=\"w-full h-full bg-white p-5 rounded-xl bg-opacity-60 backdrop-filter backdrop-blur-lg\">\r\n    <div className=\"header-card flex justify-between font-semibold\">\r\n      <div className=\"\">Account List</div>\r\n      <div className=\"flex items-center gap-x-1 text-sm text-blue-500\">\r\n         <svg className=\"h-4 w-4 fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n          <path d=\"M1.181 12C2.121 6.88 6.608 3 12 3c5.392 0 9.878 3.88 10.819 9-.94 5.12-5.427 9-10.819 9-5.392 0-9.878-3.88-10.819-9zM12 17a5 5 0 1 0 0-10 5 5 0 0 0 0 10zm0-2a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\" />\r\n        </svg>\r\n      <span>See all</span>\r\n      </div>\r\n    </div>\r\n    \r\n\r\n    <div className=\"card-content divide-y flex flex-col gap-y-3 mt-5\">\r\n\r\n     {accountMap.map((account,index)=>{\r\n         return<MyAccountCard\r\n         key={index}\r\n         id={index}\r\n         deleteMyAccount ={props.deleteMyAccount}\r\n         accountName ={account.accountName}\r\n         accountNumber={account.accountNumber}\r\n         initialAmount={account.initialAmount} />\r\n     })}\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n)\r\n}","import React, {useState} from 'react';\r\nimport AddAccount from './AddAccount';\r\nimport Heading from './Heading';\r\nimport MyAccountsTable from './MyAccountsTable';\r\n\r\nfunction SettingsPage(props){\r\n    return(<div id=\"settings\" className=\"ml-64 bg-gradient-to-r from-blue-300 to-blue-700 h-screen\">\r\n        <Heading name=\"Settings\" />\r\n        <div className=\"flex justify-evenly items-center h-full w-full\">\r\n       <div className=\" w-2/6 h-3/5\">\r\n        <AddAccount\r\n           addMyAccount ={props.addMyAccount} />\r\n       </div>\r\n        <div className=\"h-4/5 w-3/6\">\r\n        <MyAccountsTable\r\n        deleteMyAccount={props.deleteMyAccount} \r\n        myAccounts={props.myAccounts} \r\n        />\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default SettingsPage;","import React,{useState} from 'react';\r\n\r\nexport default function DepositTransactionCard(props){\r\n   const today=props.now;\r\n   const hours = today.getHours();\r\n   const minutes= today.getMinutes();\r\n   const displayminutes= (minutes<10)?('0'+ minutes):minutes\r\n   const seconds = today.getSeconds();\r\n   const displayseconds = (seconds<10)?('0'+ seconds): seconds\r\n   const dd = String(today.getDate()).padStart(2, '0');\r\n   const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n   const yyyy = today.getFullYear();\r\n   const transationTime = hours +':'+displayminutes+':'+displayseconds\r\n   const dateToday = mm + '/' + dd + '/' + yyyy;\r\n   \r\n   \r\n    return(\r\n        <div className=\"bg-gray-100 mx-auto border-gray-500 border rounded-sm text-gray-700 mb-0.5 h-30\">\r\n         <div className=\"flex p-3 border-l-8 border-green-600\">\r\n            <div className=\"space-y-1 border-r-2 pr-3\">\r\n               <div className=\"text-sm leading-5 font-semibold\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> Transaction #</span> LTC08762304</div>\r\n               \r\n               <div className=\"text-sm leading-5 font-semibold\">{dateToday}</div>\r\n               <div className=\"text-sm leading-5 font-semibold\">{transationTime}</div>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n               <div className=\"h-full flex flex-col justify-center  ml-3 space-y-1 border-r-2 pr-3\">\r\n                  {/* <div className=\"text-base leading-6 font-normal\">KROGER MEMPHIS</div> */}\r\n            \r\n                  <div className=\"text-lg leading-4 font-normal\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> To</span>{props.toAccount}</div>\r\n                  \r\n               </div>\r\n            </div>\r\n            <div className=\"border-r-2 pr-3\">\r\n               <div >\r\n                  <div className=\"ml-3 my-3 border-gray-200 border-2 bg-gray-300 p-1\">\r\n                     <div className=\"uppercase text-xs leading-4 font-medium\">Php</div>\r\n                     <div className=\"text-center text-sm leading-4 font-semibold text-gray-800\">{props.amount}</div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <div className=\"ml-3 my-5 bg-green-600 p-1 w-20\">\r\n                  <div className=\"uppercase text-xs leading-4 font-semibold text-center text-yellow-100\">Deposit</div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\n\r\nexport default function TransferTransactionCard(props){\r\n   const today=props.now;\r\n   const hours = today.getHours();\r\n   const minutes= today.getMinutes();\r\n   const displayminutes= (minutes<10)?('0'+ minutes):minutes\r\n   const seconds = today.getSeconds();\r\n   const displayseconds = (seconds<10)?('0'+ seconds): seconds\r\n   const dd = String(today.getDate()).padStart(2, '0');\r\n   const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n   const yyyy = today.getFullYear();\r\n   const transationTime = hours +':'+displayminutes+':'+displayseconds\r\n   const dateToday = mm + '/' + dd + '/' + yyyy;\r\n    return(\r\n        <div className=\"bg-gray-100 mx-auto border-gray-500 border rounded-sm text-gray-700 mb-0.5 h-30\">\r\n         <div className=\"flex p-3 border-l-8 border-yellow-600\">\r\n            <div className=\"space-y-1 border-r-2 pr-3\">\r\n               <div className=\"text-sm leading-5 font-semibold\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> Transaction #</span> LTC08762304</div>\r\n               \r\n               <div className=\"text-sm leading-5 font-semibold\">{dateToday}</div>\r\n               <div className=\"text-sm leading-5 font-semibold\">{transationTime}</div>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n               <div className=\"h-full flex flex-col justify-center  ml-3 space-y-1 border-r-2 pr-3\">\r\n                  {/* <div className=\"text-base leading-6 font-normal\">KROGER MEMPHIS</div> */}\r\n                  <div className=\"text-lg leading-4 font-normal\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> From</span>{props.fromAccount}</div>\r\n                  <div className=\"text-lg leading-4 font-normal\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> To</span>{props.toAccount}</div>\r\n                  \r\n               </div>\r\n            </div>\r\n            <div className=\"border-r-2 pr-3\">\r\n               <div >\r\n                  <div className=\"ml-3 my-3 border-gray-200 border-2 bg-gray-300 p-1\">\r\n                     <div className=\"uppercase text-xs leading-4 font-medium\">Php</div>\r\n                     <div className=\"text-center text-sm leading-4 font-semibold text-gray-800\">{props.amount}</div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <div className=\"ml-3 my-5 bg-yellow-600 p-1 w-20\">\r\n                  <div className=\"uppercase text-xs leading-4 font-semibold text-center text-yellow-100\">Money Transfer</div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport TransactionCard from './TransactionCard';\r\n\r\nexport default function WithdrawTransactionCard(props){\r\n   const today=props.now;\r\n   const hours = today.getHours();\r\n   const minutes= today.getMinutes();\r\n   const displayminutes= (minutes<10)?('0'+ minutes):minutes\r\n   const seconds = today.getSeconds();\r\n   const displayseconds = (seconds<10)?('0'+ seconds): seconds\r\n   const dd = String(today.getDate()).padStart(2, '0');\r\n   const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n   const yyyy = today.getFullYear();\r\n   const transationTime = hours +':'+displayminutes+':'+displayseconds\r\n   const dateToday = mm + '/' + dd + '/' + yyyy;\r\n    return(\r\n        <div className=\"bg-gray-100 mx-auto border-gray-500 border rounded-sm text-gray-700 mb-0.5 h-30\">\r\n         <div className=\"flex p-3 border-l-8 border-red-600\">\r\n            <div className=\"space-y-1 border-r-2 pr-3\">\r\n               <div className=\"text-sm leading-5 font-semibold\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> Transaction #</span> LTC08762304</div>\r\n               \r\n               <div className=\"text-sm leading-5 font-semibold\">{dateToday}</div>\r\n               <div className=\"text-sm leading-5 font-semibold\">{transationTime}</div>\r\n            </div>\r\n            <div className=\"flex-1\">\r\n               <div className=\"h-full flex flex-col justify-center  ml-3 space-y-1 border-r-2 pr-3\">\r\n                  {/* <div className=\"text-base leading-6 font-normal\">KROGER MEMPHIS</div> */}\r\n                  <div className=\"text-lg leading-4 font-normal\"><span className=\"text-xs leading-4 font-normal text-gray-500\"> From</span>{props.fromAccount}</div>\r\n                \r\n                  \r\n               </div>\r\n            </div>\r\n            <div className=\"border-r-2 pr-3\">\r\n               <div >\r\n                  <div className=\"ml-3 my-3 border-gray-200 border-2 bg-gray-300 p-1\">\r\n                     <div className=\"uppercase text-xs leading-4 font-medium\">Php</div>\r\n                     <div className=\"text-center text-sm leading-4 font-semibold text-gray-800\">{props.amount}</div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n               <div className=\"ml-3 my-5 bg-red-600 p-1 w-20\">\r\n                  <div className=\"uppercase text-xs leading-4 font-semibold text-center text-yellow-100\">Withdraw</div>\r\n               </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport DepositTransactionCard from './DepositTransactionCard';\r\nimport TransferTransactionCard from './TransferTransactionCard';\r\nimport WithdrawTransactionCard from './WithdrawTransactionCard';\r\n\r\n\r\nexport default function TransactionCard(props){\r\nconst transactions = props.transactions;\r\nreturn(\r\n    transactions.map(transaction=>{\r\n    if(transaction.transactionType===\"withdraw\"){\r\n        console.log(transaction.fromAccount)\r\n        return <WithdrawTransactionCard\r\n        now={transaction.now}\r\n        fromAccount={transaction.fromAccount}\r\n        amount={transaction.amount}\r\n        transaction={transaction} />\r\n    }else if(transaction.transactionType===\"deposit\"){\r\n        return <DepositTransactionCard\r\n        now={transaction.now}\r\n        toAccount={transaction.toAccount}\r\n        amount={transaction.amount}\r\n        transaction={transaction} />\r\n    }else if(transaction.transactionType===\"transfer\"){\r\n        return <TransferTransactionCard\r\n        now={transaction.now}\r\n        amount={transaction.amount}\r\n        fromAccount={transaction.fromAccount}\r\n        toAccount={transaction.toAccount}\r\n        transaction={transaction} />\r\n    }\r\n}))\r\n\r\n    \r\n}","import React from 'react';\r\nimport Heading from './Heading';\r\nimport TransactionCard from './TransactionCard';\r\n\r\nexport default function TransactionHistory(props){\r\n    return(<div id=\"transaction-history\" className=\"ml-64 bg-gradient-to-r from-blue-300 to-blue-700 h-screen overflow-scroll\">\r\n        <Heading name=\"Transaction History\" />\r\n        <div className=\"container mx-auto bg-gray-50 min-h-screen p-8 antialiased \">\r\n   <div>\r\n      \r\n      <TransactionCard \r\n      transactions={props.transactions} />\r\n     \r\n   </div>\r\n</div>\r\n    </div>)\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Dashboard from './Dashboard';\r\nimport Friends from './Friends';\r\nimport SettingsPage from './SettingsPage';\r\nimport TransactionHistory from './TransactionHistory';\r\n\r\nfunction MainContent(props){\r\n  const [transactions, setTransactions] =useState([]);\r\n\r\n    function addToTransaction(transaction){\r\n        setTransactions(prevValue=>{\r\n            return[...prevValue,transaction]\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n<div >\r\n    <Sidebar \r\n    setMessege ={props.setMessege}\r\n    logOut={props.logOut}\r\n\r\n    />\r\n    <Dashboard\r\n    addToTransaction={addToTransaction}\r\n    toTransfer={props.toTransfer}\r\n    findSelectedAccount={props.findSelectedAccount}\r\n    toWithdraw={props.toWithdraw}\r\n    toDeposit={props.toDeposit}\r\n    myAccounts={props.myAccounts}\r\n    contacts ={props.contacts}\r\n    accountDetail={props.accountDetail} />\r\n    <Friends \r\n        toDeleteContact={props.toDeleteContact}\r\n        contacts={props.contacts}\r\n        addContact={props.addContact}\r\n    />\r\n\r\n    <TransactionHistory\r\n    transactions={transactions} />\r\n    \r\n    <SettingsPage \r\n    addMyAccount={props.addMyAccount}\r\n    deleteMyAccount={props.deleteMyAccount}\r\n    myAccounts={props.myAccounts}\r\n    />\r\n    \r\n</div>)\r\n}\r\n    \r\n\r\nexport default MainContent;","import React,{useState} from 'react';\r\n\r\nexport default function NewlogIn (props){\r\n\r\n    const [credential, setCredential]= useState({\r\n        username:\"\",\r\n        password:\"\"\r\n    });\r\n\r\n    function handleChange(event){\r\n        const{name, value}=event.target;\r\n\r\n        setCredential(prevValue=>{\r\n            return{...prevValue,\r\n            [name]:value}\r\n        })\r\n    }\r\n\r\n    function submit(){\r\n        props.login(credential)\r\n    }\r\n\r\n    return(\r\n        <div className=\"bg-no-repeat bg-cover bg-center relative\" style={{backgroundImage:` url(\"https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1951&amp;q=80\")`}}><div className=\"absolute bg-gradient-to-b from-blue-500 to-blue-400 opacity-75 inset-0 z-0\"></div>\r\n  <div className=\"min-h-screen sm:flex sm:flex-row mx-0 justify-center\">\r\n      <div className=\"flex-col flex  self-center p-10 sm:max-w-5xl xl:max-w-2xl  z-10\">\r\n        <div className=\"self-start hidden lg:flex flex-col  text-white\">\r\n          <img src=\"\" className=\"mb-3\" />\r\n          <h1 className=\"mb-3 font-bold text-5xl\">{props.messege} </h1>\r\n          <p className=\"pr-3\">Lorem ipsum is placeholder text commonly used in the graphic, print,\r\n            and publishing industries for previewing layouts and visual mockups</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center self-center  z-10\">\r\n        <div className=\"p-12 bg-white mx-auto rounded-2xl w-100 \">\r\n            <div className=\"mb-4\">\r\n              <h3 className=\"font-semibold text-2xl text-gray-800\">Sign In </h3>\r\n              <p className=\"text-gray-500\">Please log in to your account.</p>\r\n            </div>\r\n            <div className=\"space-y-5\">\r\n                        <div className=\"space-y-2\">\r\n                              <label className=\"text-sm font-medium text-gray-700 tracking-wide\">Username</label>\r\n              <input\r\n              value={credential.username}\r\n                    name=\"username\"\r\n                    onChange={handleChange}\r\n               className=\" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-blue-400\" type=\"text\" placeholder=\"Username\" />\r\n              </div>\r\n                          <div className=\"space-y-2\">\r\n              <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\r\n                Password\r\n              </label>\r\n              <input\r\n              value={credential.password}\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n               className=\"w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-blue-400\" type=\"password\" placeholder=\"Enter your password\" />\r\n            </div>\r\n              <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <input id=\"remember_me\" name=\"remember_me\" type=\"checkbox\" className=\"h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded\" />\r\n                <label for=\"remember_me\" className=\"ml-2 block text-sm text-gray-800\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <a href=\"#\" className=\"text-blue-400 hover:text-blue-500\">\r\n                  Forgot your password?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button \r\n              onClick ={submit}\r\n                    color=\"lightBlue\"\r\n              type=\"submit\" className=\"w-full flex justify-center bg-blue-400  hover:bg-blue-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500\">\r\n                Log in\r\n              </button>\r\n            </div>\r\n            </div>\r\n            <div className=\"pt-5 text-center text-gray-400 text-xs\">\r\n              <span>\r\n                Copyright © 2021-2022\r\n                <a href=\"https://https://github.com/ronniel28\" rel=\"\" target=\"_blank\" title=\"ronniel github\" className=\"text-blue hover:text-blue-500 \">RONNIEL</a></span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Login from './Login';\r\nimport MainContent from './MainContent';\r\nimport NewlogIn from './NewLogIn';\r\n\r\nconst logInCredential ={\r\n    key:7,\r\n    username:\"avionschool\",\r\n    password:\"12345\"\r\n}\r\n\r\nconst myAccountDetail ={\r\n    key:8,\r\n    accountName: \"John Doe\",\r\n    accountNumber: 1234567,\r\n    initialAmount: 100000\r\n}\r\n\r\n\r\nfunction App(){\r\n    const[logInMessege, setLogInMessege] = useState(\"Welcome!\")\r\n    const[isLoggedIn, setIsLoggedIn]= useState(false);\r\n    const [contacts, setContacts]= useState([{\r\n        accountType:\"Contacts\",\r\n        accountName: \"Contact 1\",\r\n        accountNumber: 4,\r\n        initialAmount: 100000},\r\n        {\r\n\r\n        accountType:\"Contacts\",\r\n        accountName:\"Contact 2\",\r\n        accountNumber:5,\r\n        initialAmount:200000\r\n        },\r\n        {\r\n  \r\n        accountType:\"Contacts\",\r\n        accountName:\"Contact 3\",\r\n        accountNumber:6,\r\n        initialAmount:200000\r\n        }]) //for contacts array\r\n\r\n\r\n    const [myAccounts, setMyAccounts] =useState([\r\n        {\r\n  \r\n        accountType:\"ownAccount\",\r\n        accountName: \"John Doe\",\r\n        accountNumber: 1,\r\n        initialAmount: 100000},\r\n        {\r\n\r\n        accountType:\"ownAccount\",\r\n        accountName:\"Ronniel\",\r\n        accountNumber:2,\r\n        initialAmount:200000\r\n        },\r\n        {\r\n   \r\n        accountType:\"ownAccount\",\r\n        accountName:\"Savings Account 3\",\r\n        accountNumber:3,\r\n        initialAmount:200000\r\n        }\r\n    ]) //my accounts\r\n    \r\n    function checkCredential(credential){\r\n        if((logInCredential.username === credential.username)&&(logInCredential.password === credential.password)){\r\n            setIsLoggedIn(true);\r\n        }else{\r\n            setLogInMessege(\"User Doesn't Exists\")\r\n        }\r\n    }\r\n\r\n    function logOut(){\r\n        setIsLoggedIn(false);\r\n    }\r\n\r\n    function setMessege(messege){\r\n        setLogInMessege(messege)\r\n    }\r\n\r\n    //contacts\r\n    function addContact(contact){\r\n        setContacts(prevContacts=>{\r\n            return [...prevContacts, contact]\r\n        })\r\n    }\r\n\r\n\r\n    function toDeleteContact(id){\r\n        setContacts(prevContacts=>{\r\n            return prevContacts.filter((contact, index)=>{\r\n                return index !==id\r\n            })\r\n        })\r\n    }\r\n\r\n    //my accounts\r\n    function addMyAccount(account){\r\n        setMyAccounts(prevContacts=>{\r\n            return [...prevContacts, account]\r\n        })\r\n        console.log(myAccounts)\r\n    }\r\n    \r\n    function deleteMyAccount(id){\r\n        setMyAccounts(prevContacts=>{\r\n            return prevContacts.filter((account, index)=>{\r\n                return index !==id\r\n            })\r\n        })\r\n    }\r\n\r\n    //deposit \r\n    function findSelectedAccount(id){\r\n       console.log(myAccounts[id].initialAmount);\r\n    }\r\n\r\n    function toDeposit(depositInput){\r\n        const amount= depositInput.amount;\r\n        const accountId= depositInput.toAccountId;\r\n        console.log(typeof depositInput.accountType)\r\n        if(depositInput.accountType===\"Contacts\"){\r\n            setContacts(contacts.map(prevValue=>{\r\n                if(prevValue.accountNumber !== accountId) return prevValue\r\n                return{...prevValue, initialAmount:(prevValue.initialAmount + amount)}\r\n            }))\r\n        }else{\r\n            setMyAccounts(myAccounts.map(prevValue=>{\r\n                if(prevValue.accountNumber !== accountId) return prevValue\r\n                return{...prevValue,initialAmount:(prevValue.initialAmount + amount)}\r\n            }))\r\n        }\r\n       \r\n    }\r\n\r\n    //withdraw\r\n    function toWithdraw(withdrawInput){\r\n        const amount= withdrawInput.amount;\r\n        const accountId= withdrawInput.fromAccountId;\r\n\r\n        setMyAccounts(myAccounts.map(prevValue=>{\r\n            if(prevValue.accountNumber !== accountId) return prevValue\r\n            return{...prevValue, initialAmount: (prevValue.initialAmount - amount )}\r\n           \r\n        }))\r\n       \r\n    }\r\n\r\n    \r\n\r\n    //transfer money\r\n\r\n    function toTransfer(transferInput){\r\n        const transferFromAccountId = transferInput.transferFromAccountId;\r\n        const transferAmount = transferInput.transferAmount;\r\n        const transferToAccountId= transferInput.transferToAccountId\r\n\r\n            (transferInput.transferAccountType===\"Contacts\")?setContacts(contacts.map(prevValue=>{\r\n                if(prevValue.accountNumber !== transferToAccountId) return prevValue\r\n                return{...prevValue, initialAmount:(prevValue.initialAmount + transferAmount)}\r\n            }))\r\n            :\r\n            setMyAccounts(myAccounts.map(prevValue=>{\r\n                if(prevValue.accountNumber !== transferToAccountId) return prevValue\r\n                return{...prevValue,initialAmount:(prevValue.initialAmount + transferAmount)}\r\n            }))\r\n       \r\n        // if(transferInput.transferAccountType===\"Contacts\"){\r\n            \r\n        // }else{\r\n            \r\n        // }\r\n        \r\n    }\r\n\r\nreturn(isLoggedIn?\r\n<MainContent\r\ntoTransfer={toTransfer}\r\ntoWithdraw={toWithdraw}\r\nfindSelectedAccount={findSelectedAccount}\r\ntoDeposit={toDeposit}\r\naddMyAccount={addMyAccount}\r\ndeleteMyAccount={deleteMyAccount}\r\nmyAccounts={myAccounts}\r\ntoDeleteContact={toDeleteContact}\r\ncontacts ={contacts}\r\naddContact={addContact}\r\nsetMessege={setMessege}\r\nlogOut = {logOut}\r\naccountDetail={myAccountDetail} />\r\n:\r\n\r\n\r\n<NewlogIn\r\nmessege ={logInMessege}\r\nlogin={checkCredential} />\r\n )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"@material-tailwind/react/tailwind.css\";\r\nimport './index.css';\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}